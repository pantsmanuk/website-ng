<?php
 
class Cron extends CI_Controller {

	function Cron()
	{
		parent::__construct();	
	}
	
	function index($method = NULL)
	{
		//grab global initialisation
		include_once($this->config->item('full_base_path').'system/application/controllers/init/initialise.php');
		//load libraries and models
		
		//pilot_status();
	}
	
	function pilot_status()
	{
		//grab global initialisation
		include_once($this->config->item('full_base_path').'system/application/controllers/init/initialise.php');
		//load libraries and models
		
		// Placeholder - Check all pilots
		// Status - 0=Active, 1=Inactive
		$sql = "UPDATE pilots SET status=1 WHERE usergroup IS NULL AND status=0 AND lastflight<=?";
		$query = $this->db->query($sql, array($active_compare_date));
		$num_rows = $this->db->affected_rows();

		log_message('info', 'Scheduler => '.$num_rows.' pilots changed to Inactive status.');
	}
	
	function pilot_avatar($username = NULL)
	{
		//grab global initialisation
		include_once($this->config->item('full_base_path').'system/application/controllers/init/initialise.php');
		//load libraries and models
				
		$clean['images'] = $data['assets_path'].'images/';
		$clean['uploads'] = $data['assets_path'].'uploads/';
		
		if(!empty($username)){
			// pilot username supplied
			$query = $this->db->query("SELECT 	pilots.id,
												pilots.username,
												pilots.department,  
												pilots.management_pips, 
												pilots.rank,
												awards_assigned.id as awards_assigned_id,
												awards_index.id as awards_index_id,
												awards_index.aggregate_award_name,
												awards_index.aggregate_award_rank
			
												FROM pilots 
												
													LEFT JOIN awards_assigned
													ON awards_assigned.user_id = pilots.id
													
													LEFT JOIN awards_index
													ON awards_assigned.awards_index_id = awards_index.id
												
												WHERE pilots.username = '$username'
												
												ORDER BY pilots.id, awards_assigned.assigned_date
												
												");
		} 
		else{
			// no pilot username supplied, process all pilots (active and inactive)
			$query = $this->db->query("SELECT 	pilots.id,
												pilots.username,
												pilots.department,  
												pilots.management_pips, 
												pilots.rank,
												awards_assigned.id as awards_assigned_id,
												awards_index.id as awards_index_id,
												awards_index.aggregate_award_name,
												awards_index.aggregate_award_rank
			
												FROM pilots 
												
													LEFT JOIN awards_assigned
													ON awards_assigned.user_id = pilots.id
													
													LEFT JOIN awards_index
													ON awards_assigned.awards_index_id = awards_index.id
												
												WHERE pilots.status = '0'
												OR pilots.status = '1'
												
												ORDER BY pilots.id, awards_assigned.assigned_date
												
												");
			
		}		
		
		$result = $query->result();
		$num_rows = $query->num_rows();
		
				
		if ($num_rows > 0){
			foreach($result as $row){
				$pilot[$row->id]['username'] = $row->username;
				$pilot[$row->id]['department'] = $row->department;
				$pilot[$row->id]['management_pips'] = $row->management_pips;
				$pilot[$row->id]['rank'] = $row->rank;
				
				//only hold the highest award for each aggregate type
				if(!array_key_exists('awards', $pilot[$row->id]) || !array_key_exists($row->aggregate_award_name, $pilot[$row->id]['awards']) 
				|| $row->awards_index_id < $pilot[$row->id]['awards'][$row->aggregate_award_name]['aggregate_award_name']){
					$pilot[$row->id]['awards'][$row->aggregate_award_name]['award_id'] = $row->awards_index_id;
					$pilot[$row->id]['awards'][$row->aggregate_award_name]['aggregate_award_name'] = $row->awards_index_id;
				}
			}
				
		}
		else{
			$pilot = array();
		}
		
		// Make flying!
		foreach ($pilot as $data) {
			
			// Make the epaulette image
			if(!empty($data['department'])){
				// Staff pilot
				$epaulette = imagecreatefrompng($clean['images'].'ranks/'.$data['rank'].'_'.$data['management_pips'].'.png');
			} 
			else{
				// Normal pilot
				$epaulette = imagecreatefrompng($clean['images'].'ranks/'.$data['rank'].'.png');
			}
			
			//create awards array
			$awards_array = $data['awards'];
			
			// Pretty much duplicate the V1 site avatar code here!
			$columns = 4; $rows = 0;
			$count = count($awards_array);
			$rows = ceil($count/4)+1;
			$image = imagecreatetruecolor((30*$columns),(30*$rows));
			$colorBackgr = imagecolorallocate($image, 255, 255, 255);
			imagefill($image,0,0,$colorBackgr);
			imagecopy($image,$epaulette,0,0,0,0,120,28);
			$pos_x = 0;
			$pos_y = 30;
			$i = 1;

			if ($count>0) {
				foreach ($awards_array as $award) {
					if ($i>4) {
						$pos_y = $pos_y + 30;
						$pos_x = 0;
						$i = 1;
					}
					
					$tmp_img_path = $clean['uploads'].'awards/'.$award['award_id'].'.png';
					
					if(!file_exists($tmp_img_path)){
						//use the fallback image instead
						$tmp_img_path = $clean['uploads'].'awards/no-image.png';
					}
					
					$imgAward = imagecreatefrompng($tmp_img_path);
					$colorBackgr = imagecolorallocate($imgAward, 255, 255, 255);
					imagecopy($image,$imgAward,$pos_x,$pos_y,0,0,30,30);
					$pos_x = $pos_x + 30;
					$i++;
				}
			}
			//imagetruecolortopalette($image,false,256);
			//imageinterlace($image, 1);
			$imgLocation = $clean['images'].'avatars/'.$data['username'].'.png';
			//header ("Content-type: image/png");
			//imagepng($image,NULL);
			imagepng($image,$imgLocation);
			imagedestroy($image);
			chmod($imgLocation,0644);
		}
	}
	
	function pilot_signature($username = NULL)
	{
		//grab global initialisation
		include_once($this->config->item('full_base_path').'system/application/controllers/init/initialise.php');
		//load libraries and models
		//$clean['images'] = "/home/euroharm/public_html/site2/assets/images/signatures";
		$clean['images'] = $data['assets_path'].'images/signatures';
		
		if (!empty($username)) {
			// pilot username supplied
			$username=array($username);
		} else {
			// no pilot username supplied, process all pilots (active and inactive)
			$sql = "SELECT pilots.username FROM pilots WHERE pilots.status IN (0,1) ORDER BY pilots.username";
			$query = $this->db->query($sql);
			if ($query->num_rows() > 0) {
				foreach ($query->result() as $row) {
					$username[] = $row->username;
				}
			}
		}

		// Make flying!
		foreach ($username as $value) {
			$sql = "SELECT pilots.fname, pilots.sname, pilots.pp_location, pilots.flighthours, pilots.flightmins, UPPER(ranks.rank) AS rank, LOWER(hub.hub_icao) AS icao FROM pilots LEFT JOIN hub ON pilots.hub=hub.id LEFT JOIN ranks ON pilots.rank=ranks.id WHERE pilots.username = ?";
			$query = $this->db->query($sql, array($value));
			if ($query->num_rows() > 0) {
				$row = $query->row();
				$line[] = $row->fname." ".$row->sname; // First line; pilot name
				$line[] = "EHM-".$value." Rank: ".$row->rank; // Second line; callsign and rank
				$line[] = "Location: ".$row->pp_location; // Third line; pilot location
				$line[] = "Flight hours: ".$row->flighthours.":".$row->flightmins; // Final line; flight hours
				$image=imagecreatefrompng($clean['images']."/backgrounds/status_".$row->icao.".png");
				$black = imagecolorat($image, 241, 56);
				$font = $clean['images'].'/fonts/calibrib.ttf';
				imagettftext($image,11,0,7,35,$black,$font,$line[0]);
				$font = $clean['images'].'/fonts/calibri.ttf';
				imagettftext($image,10,0,7,50,$black,$font,$line[1]);
				imagettftext($image,10,0,7,80,$black,$font,$line[3]);
				imagettftext($image,10,0,7,65,$black,$font,$line[2]);
				imagealphablending($image, false);
				imagesavealpha($image,true);
				$imgLocation = $clean['images'].'/'.$value.'.png';
				//header ("Content-type: image/png");
				//imagepng($image,NULL);
				imagepng($image,$imgLocation);
				imagedestroy($image);
				chmod($imgLocation,0644);
				unset($line);
			}
		}
	}
	
	function pilot_awards($username = NULL)
	{
		//grab global initialisation
		include_once($this->config->item('full_base_path').'system/application/controllers/init/initialise.php');
		//load libraries and models
		// Placeholder - Per default, check for awards for all pilots
	}
}

/* End of file */